set runtimepath^=~/.vim runtimepath+=~/.vim/after
let &packpath = &runtimepath

" ====================================== LOAD FUNCTIONS ======================================
source ~/.config/vim/functions.vim

function! RunInNearestTerminal(cmd) range abort
    lua require("vscode").call("workbench.action.terminal.runSelectedText")
endfunction

function! CreateSplitMappings(mode, mapping, rhs) abort
    execute a:mode.'map '.a:mapping.' '.a:rhs
    execute a:mode.'map '.a:mapping.a:mapping[-1:].' '.a:rhs
    execute a:mode.'map '.a:mapping.'h <cmd>call v:lua.require("vscode").action("workbench.action.newGroupLeft")<CR>'.a:rhs
    execute a:mode.'map '.a:mapping.'l <cmd>call v:lua.require("vscode").action("workbench.action.newGroupRight")<CR>'.a:rhs
    execute a:mode.'map '.a:mapping.'j <cmd>call v:lua.require("vscode").action("workbench.action.newGroupBelow")<CR>'.a:rhs
    execute a:mode.'map '.a:mapping.'k <cmd>call v:lua.require("vscode").action("workbench.action.newGroupAbove")<CR>'.a:rhs
endfunction

" ====================================== SET PLUGINS ======================================
if !exists("plugins")
    let plugins = [
        \ ['tpope/vim-repeat', {}],
        \ ['tpope/vim-surround', {}],
        \ ['michaeljsmith/vim-indent-object', {}],
        \ ['junegunn/vim-easy-align', {}],
        \ ['yogeshdhamija/find-in-dir-helper.vim', {}],
        \ ['yogeshdhamija/close-hidden-buffers-command.vim', {}],
        \ ['yogeshdhamija/better-asterisk-remap.vim', {}],
        \ ['machakann/vim-highlightedyank', {}],
    \ ]
endif

" ====================================== LOAD VIMRC ======================================
source ~/.vimrc

" ====================================== CHANGE SETTINGS ======================================
set showmode

" ==================================== VSCODE-NEOVIM SPECIFICS ====================================

" Use VSCode's undo and redo so that LSP actions are undoable
    nnoremap u :call v:lua.require("vscode").action('undo')<CR>
    nnoremap <C-R> :call v:lua.require("vscode").action('redo')<CR>

" Can only open directory listing on the left in VSCode
    nnoremap \d <cmd>echomsg "can't open dir browser anywhere except in left panel"<cr>
    nnoremap \dd <cmd>echomsg "can't open dir browser anywhere except in left panel"<cr>
    nnoremap \dj <cmd>echomsg "can't open dir browser anywhere except in left panel"<cr>
    nnoremap \dk <cmd>echomsg "can't open dir browser anywhere except in left panel"<cr>
    nnoremap \dl <cmd>echomsg "can't open dir browser anywhere except in left panel"<cr>
    nnoremap \dh <cmd>call DirectoryBrowser()<cr>

" Get folding working with vscode neovim plugin
    nnoremap zM :call v:lua.require("vscode").call('editor.foldAll')<CR>
    nnoremap zR :call v:lua.require("vscode").call('editor.unfoldAll')<CR>
    nnoremap zc :call v:lua.require("vscode").call('editor.fold')<CR>
    nnoremap zC :call v:lua.require("vscode").call('editor.foldRecursively')<CR>
    nnoremap zo :call v:lua.require("vscode").call('editor.unfold')<CR>
    nnoremap zO :call v:lua.require("vscode").call('editor.unfoldRecursively')<CR>
    nnoremap za :call v:lua.require("vscode").call('editor.toggleFold')<CR>
    function! MoveCursor(direction) abort
        if(reg_recording() == '' && reg_executing() == '')
            return 'g'.a:direction
        else
            return a:direction
        endif
    endfunction
    nmap <expr> j MoveCursor('j')
    nmap <expr> k MoveCursor('k')

" Shortcuts to manupulate Jupyter notebooks
    nnoremap zz :call v:lua.require("vscode").call('notebook.centerActiveCell')<CR>zz
    nnoremap gg :call v:lua.require("vscode").call('notebook.focusTop')<CR>gg
    nnoremap G :call v:lua.require("vscode").call('notebook.focusBottom')<CR>G

" Get navigating marks working with vscode neovim plugin
    " (also relies on VSCode Bookmarks plugin)
    nnoremap m v<Esc>:call v:lua.require("vscode").call('bookmarks.toggleLabeled')<CR><Esc>

" Fix VSCode commands
    command! Tabnew call v:lua.require("vscode").call("workbench.action.duplicateWorkspaceInNewWindow")
    command! -bang  Quit if <q-bang> ==# '!' | call v:lua.require("vscode").call('workbench.action.revertAndCloseActiveEditor') | else | call v:lua.require("vscode").call('workbench.action.joinTwoGroups') | call v:lua.require("vscode").call('workbench.action.navigateBack') | endif
    command! -bang  Bd if <q-bang> ==# '!' | call v:lua.require("vscode").call('workbench.action.revertAndCloseActiveEditor') | else | call v:lua.require("vscode").call('workbench.action.closeActiveEditor') | endif
    AlterCommand bd Bd

" Fix the 'vscode neovim' plugin's <C-W> mappings
    nnoremap <C-W>>     :call v:lua.require("vscode").call("workbench.action.increaseViewWidth")<CR>
    nnoremap <C-W><     :call v:lua.require("vscode").call("workbench.action.decreaseViewWidth")<CR>
    nnoremap <C-W>+     :call v:lua.require("vscode").call("workbench.action.increaseViewHeight")<CR>
    nnoremap <C-W>-     :call v:lua.require("vscode").call("workbench.action.decreaseViewHeight")<CR>
    
" Add commenting to vscode neovim plugin
    xmap gc  <Plug>VSCodeCommentary
    nmap gc  <Plug>VSCodeCommentary
    omap gc  <Plug>VSCodeCommentary
    nmap gcc <Plug>VSCodeCommentaryLine

" ==================================== ADD FUNCTIONALITY ====================================
function! DisplayErrors() abort
    call v:lua.require("vscode").call("workbench.actions.view.problems")
endfunction

function! AutoFormat() abort
    call v:lua.require("vscode").call('editor.action.formatDocument')
endfunction

function! ChangeSymbolName() abort
    call v:lua.require("vscode").call('editor.action.rename')
endfunction

function! DelMarks() abort
    call v:lua.require("vscode").call("bookmarks.clearFromAllFiles")
endfunction

function! Only() abort
    call v:lua.require("vscode").call("workbench.action.closeSidebar")
    call v:lua.require("vscode").call("workbench.action.closePanel")
    call v:lua.require("vscode").call("workbench.action.joinAllGroups")
endfunction

function! AccessMarks() abort
    call v:lua.require("vscode").call('bookmarks.listFromAllFiles')
endfunction

function! StartTerminal() abort
    lua require("vscode").action('workbench.action.createTerminalEditor')
endfunction

function! Implementations() abort
    call v:lua.require("vscode").action('editor.action.goToImplementation')
endfunction

function! References() abort
    call v:lua.require("vscode").action('editor.action.goToReferences')
endfunction

function! Definition() abort
    call v:lua.require("vscode").action('editor.action.revealDefinition')
endfunction

function! Error() abort
    call Hover()
endfunction

function! Hover() abort
    call v:lua.require("vscode").call('editor.action.showDefinitionPreviewHover')
endfunction

function! AllAction() abort
    call v:lua.require("vscode").call("workbench.action.showCommands")
endfunction

function! QuickAction() abort
    call v:lua.require("vscode").call("editor.action.quickFix")
endfunction

function! DirectoryBrowser() abort
    call v:lua.require("vscode").call("workbench.files.action.focusFilesExplorer")
    call v:lua.require("vscode").call("workbench.files.action.showActiveFileInExplorer")
endfunction

function! GoToFile() abort
    call v:lua.require("vscode").action("seito-openfile.openFileFromText")
endfunction

function! ClearScreen() abort
    set nohlsearch
    call v:lua.require("vscode").call("workbench.action.closeSidebar")
    call v:lua.require("vscode").call("workbench.action.closePanel")
    call v:lua.require("vscode").call("notifications.hideToasts")
    call v:lua.require("vscode").call("notifications.hideList")
    call v:lua.require("vscode").call("closeFindWidget")
    call v:lua.require("vscode").call("closeParameterHints")
    call v:lua.require("vscode").call("inlineChat.close")
endfunction

function! OpenFile() abort
    call v:lua.require("vscode").call("workbench.action.quickOpen")
endfunction

function! ListBuffers() abort
    call v:lua.require("vscode").call("workbench.action.showEditorsInActiveGroup")
endfunction

function! ListWindows() abort
    call v:lua.require("vscode").call("workbench.action.showAllEditors")
endfunction

function! ExpandSelection() abort
    call v:lua.require("vscode").call("editor.action.smartSelect.expand")
endfunction

function! ShrinkSelection() abort
    call v:lua.require("vscode").call("editor.action.smartSelect.shrink")
endfunction

function! InlineAssistThroughAiMagic() abort
    call v:lua.require("vscode").call("continue.focusContinueInputWithoutClear")
endfunction
